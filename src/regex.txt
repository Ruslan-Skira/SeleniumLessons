// HW 1   ^\w?[A-Z].*\.
A tree was born in the forest, => false
in the forest it grew. => false
Winter and summer slim => false
It was green. => true
jkdjfQ => false

//HW 2

a)
		Создать регулярное выражение для поиска несоответствия строки  шаблонy денежного формата:
			- цифры разделенные точкой или запятой
			- разделителя может не быть
			- после разделителя должна быть одна или две цифры
			- в конце должен находится литерал, обозначающий валюту из набора: грн руб $

			Пример:
				0.50грн 	=> true
				0.5грн 		=> true
				12,45руб 	=> true
				15,45 руб 	=> false
				123$ 		=> true
				123.$		=> false
				123.00$		=> true
				a12грн 		=> false
				0.50грн.	=> false
				0.50грн 	=> false

	b)  Написать функцию boolean testCurrencyFormat(String regexFormat);
			- которая тестирует регулярку на заданных выше примерах
			- возвращает  true, если все тесты прошли корректно, false - иначе


3) Даты. найти строки сответствующие этому шаблону: YYYY/MM/DD HH:MM(:SS)

            а) 	Проверить дату на соответствие шаблону:
            	Примеры:
            		2012/09/18 12:10 — true
            		2013/09/09 09:09 — true
            		2013/9/09 09:09 — false

            б)* Проверить дополнительно дату на диапазон между 1000 и 2012 годом. Секунды могут быть опущены.
            	(Облегчим задачу: в каждом месяце 30 дней.)
            	Примеры:
            		2012/09/18 12:10 — true
            		2013/09/09 09:09 — false  // (после 2012)


            4) Проверить, число на соответствие формату:
            	цифрые группами по три могут быть разделены запятой, пробелом или символом подчеркивания.

            Примеры:
            	8,205,500 => true
            	8 205 500 => true
            	8_205_500 => true
            	8-205-500 => true
            	1,5826,000 => false (4 цифры)
            		15826 => true
            	1-826,000 => false (разные разделители)

            5)* Напишите программу, которая посчитает количество смайликов в заданном тексте.

            Смайликом будем считать последовательность символов, удовлетворяющую условиям:

            	- первым символом является либо ; (точка с запятой) либо : (двоеточие) ровно один раз
            	- далее может идти символ – (минус) сколько угодно раз (в том числе символ минус может идти ноль раз)
            	- в конце обязательно идет некоторое количество (не меньше одной) одинаковых скобок из следующего набора: (, ), [, ].
            	- внутри смайлика не может встречаться никаких других символов.

            Например,
            	смайлики:

            		:)
            		;---------[[[[[[[[

            не смайлики:

            	:-)]

            	;--

            	-)

            	::-(

            	:-()

            В этой задаче надо будет посчитать количество смайликов, содержащихся в данном тексте.

            6)* Написать функцию, которая при помощи регулярных выражений разбивает текст на отдельные слова и находит частоту встречаемости отдельных слов.

            7) Написать регулярное выражение, которые проверят емейлы простого вида (например, test@test.test).

            8)* Выделить тегом <strong> повторяющиеся слова.

            Примеры:
            	Тhis is a test=> this is a test
            	Тhis is is a test => this is <strong>is</strong> a test